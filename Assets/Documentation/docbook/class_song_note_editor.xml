<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_song_note_editor" xml:lang="en-US">
<title>SongNoteEditor Class Reference</title>
<indexterm><primary>SongNoteEditor</primary></indexterm>
<para>Inheritance diagram for SongNoteEditor:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_song_note_editor.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a10ef8c506080f92b5f6202359d588cbd">OnLeftMouseUp</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1ab97d39b001c5ceebc116d7d02dccdf87">ScaleNote</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_song_note_editor_1a28dc32a65d6746937bc9fc1b079c83f0">ConvertYPositionToSongTime</link> (Vector2 position)</para>
</listitem>
            <listitem><para>Vector2 <link linkend="_class_song_note_editor_1a05ea5d53cf9e8d601a734be1ef97df55">ConvertNoteEventToNotePosition</link> (<link linkend="_class_note_event_info">NoteEventInfo</link> noteEvent)</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a5957d0008b8759d50607b11cf2d51d5f">RescaleNotesFromBPM</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static Vector2 <link linkend="_class_song_note_editor_1a88a9f0074c12750d27a26c855cb043d1">GridSnapNote</link> (Vector2 input, float increment=0.204545f)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>HashSet&lt; <link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link> &gt; <link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link> = new HashSet&lt;<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&gt;()</para>
</listitem>
            <listitem><para>float <link linkend="_class_song_note_editor_1a148110f33b452b15f1118755429cd6b2">selectCount</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95">AddNote</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1aa17a3d897f2403136eb7afc95d338af3">DeselectAllNotes</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a758e1bfc69875491b44c5963208d4e94">CopySelection</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1af45950fdc951948890a5e15cbfebf549">PasteSelection</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a574b4799d519a82339dbdc639e760eca">UpdateStartEndTimes</link> (<link linkend="_class_note_event_info">NoteEventInfo</link> noteEvent, float snappedYPos)</para>
</listitem>
            <listitem><para>Vector2 <link linkend="_class_song_note_editor_1a611b32630fd14bc0c2785b5b6441bbf3">GetOffsetFromTransform</link> (Vector2 point, Transform referenceTransform)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_song_note_editor_1a3f3980781b2a982a7139ddcc16fac3e9">IsTransformInSelectedNotes</link> (Transform targetTransform)</para>
</listitem>
            <listitem><para>void <link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>Vector2 <link linkend="_class_song_note_editor_1ac65f7f8ffc0de48fa0e8d135fdbffdbc">mousePosition1</link></para>
</listitem>
            <listitem><para>Vector2 <link linkend="_class_song_note_editor_1a9048b68a375aaca98125af28a848b79c">mousePosition2</link></para>
</listitem>
            <listitem><para>LayerMask <link linkend="_class_song_note_editor_1a70c2afca7ead12cc95a000d3180d80b3">groupSelectLayerMask</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_song_note_editor_1a16d2c1b60739973f10ef20d385435e21">isGroupSelecting</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_song_note_editor_1ad0191c5dacb3e8a3a6446c196b29428f">isScaling</link></para>
</listitem>
            <listitem><para>RaycastHit2D <link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95"/><section>
    <title>AddNote()</title>
<indexterm><primary>AddNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>AddNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.AddNote ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">168 &#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.CompareTag(<emphasis role="stringliteral">&quot;KeyLane&quot;</emphasis>))
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1aa17a3d897f2403136eb7afc95d338af3">DeselectAllNotes</link>();
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;noteNumber&#32;=&#32;1&#32;+&#32;<link linkend="_class_spawn_piano">SpawnPiano</link>.<link linkend="_class_spawn_piano_1a81c1e7fb3b0bccb57b3bba39e581f9f3">instance</link>.GetIndexOfSpriteRenderer(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform.parent.GetComponent&lt;SpriteRenderer&gt;());
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SongEditor.instance.CreateNote(noteNumber,&#32;mousePosition1.y,&#32;mousePosition1.y&#32;+&#32;0.5f,&#32;mousePosition1.y);</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a5957d0008b8759d50607b11cf2d51d5f">RescaleNotesFromBPM</link>();
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
176 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a05ea5d53cf9e8d601a734be1ef97df55"/><section>
    <title>ConvertNoteEventToNotePosition()</title>
<indexterm><primary>ConvertNoteEventToNotePosition</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>ConvertNoteEventToNotePosition</secondary></indexterm>
<para><computeroutput>Vector2 SongNoteEditor.ConvertNoteEventToNotePosition (<link linkend="_class_note_event_info">NoteEventInfo</link> noteEvent)</computeroutput></para><programlisting linenumbering="unnumbered">303 &#32;&#32;&#32;&#32;{
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(noteEvent.<link linkend="_class_note_event_info_1a9435e829c3bd157528c83c87c7a481df">noteNumber</link>&#32;*&#32;1,&#32;noteEvent.<link linkend="_class_note_event_info_1aaeaec089312cf881c719b2b56680fbff">startTime</link>&#32;*&#32;(GameSettings.bpm&#32;/&#32;60));
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
306 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_song_note_editor_1a28dc32a65d6746937bc9fc1b079c83f0"/><section>
    <title>ConvertYPositionToSongTime()</title>
<indexterm><primary>ConvertYPositionToSongTime</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>ConvertYPositionToSongTime</secondary></indexterm>
<para><computeroutput>float SongNoteEditor.ConvertYPositionToSongTime (Vector2 position)</computeroutput></para><programlisting linenumbering="unnumbered">296 &#32;&#32;&#32;&#32;{
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1&#32;unit&#32;=&#32;1&#32;&quot;beat&quot;&#32;or&#32;bar&#32;on&#32;the&#32;UI</emphasis>
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;position.y&#32;/&#32;(GameSettings.bpm&#32;/&#32;60);
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;y&#32;position&#32;/&#32;bpm&#32;/60&#32;so&#32;it&#32;is&#32;bpS</emphasis>
300 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_song_note_editor_1a758e1bfc69875491b44c5963208d4e94"/><section>
    <title>CopySelection()</title>
<indexterm><primary>CopySelection</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>CopySelection</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.CopySelection ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">281 &#32;&#32;&#32;&#32;{
282 
283 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_song_note_editor_1aa17a3d897f2403136eb7afc95d338af3"/><section>
    <title>DeselectAllNotes()</title>
<indexterm><primary>DeselectAllNotes</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>DeselectAllNotes</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.DeselectAllNotes ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">214 &#32;&#32;&#32;&#32;{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&#32;note&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>)
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;note.<link linkend="_class_editor_note_wrapper_1ae73636bf82ca2778e70f17b38f49f4a7">noteTransform</link>.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().ResetHighlightColour();
218 
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Clear();
221 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95">AddNote()</link>, and <link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d"/><section>
    <title>DeselectNote()</title>
<indexterm><primary>DeselectNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>DeselectNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.DeselectNote ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">200 &#32;&#32;&#32;&#32;{
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.CompareTag(<emphasis role="stringliteral">&quot;EditorNote&quot;</emphasis>))
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashSet&lt;EditorNoteWrapper&gt;&#32;noteStorage&#32;=&#32;<emphasis role="keyword">new</emphasis>();
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&#32;note&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>)
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(note.<link linkend="_class_editor_note_wrapper_1ae73636bf82ca2778e70f17b38f49f4a7">noteTransform</link>&#32;==&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform)&#32;{&#32;note.<link linkend="_class_editor_note_wrapper_1ae73636bf82ca2778e70f17b38f49f4a7">noteTransform</link>.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().ResetHighlightColour();&#32;}
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;noteStorage.Add(note);&#32;}
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Clear();
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>&#32;=&#32;noteStorage;
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
212 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold()</link>, <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, and <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c"/><section>
    <title>DragNote()</title>
<indexterm><primary>DragNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>DragNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.DragNote ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">247 &#32;&#32;&#32;&#32;{
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.CompareTag(<emphasis role="stringliteral">&quot;EditorNote&quot;</emphasis>)&#32;&amp;&amp;&#32;!<link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link>)
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets</link>();
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1a3f3980781b2a982a7139ddcc16fac3e9">IsTransformInSelectedNotes</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform))
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;temp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform,&#32;<link linkend="_class_song_note_editor_1a611b32630fd14bc0c2785b5b6441bbf3">GetOffsetFromTransform</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point,&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform));
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Add(temp);
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp.noteTransform.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().SetHighlightColour(Color.red);
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Count&#32;&gt;&#32;0&#32;&amp;&amp;&#32;<link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link>&#32;&amp;&amp;&#32;!Input.GetKeyDown(KeyCode.LeftShift))
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
261 
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;<link linkend="_class_song_note_editor_1a9048b68a375aaca98125af28a848b79c">mousePosition2</link>&#32;=&#32;Camera.main.ScreenToWorldPoint(Input.mousePosition);
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&#32;dragNote&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>)
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;snapped&#32;position</emphasis>
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;snappedPosition&#32;=&#32;<link linkend="_class_song_note_editor_1a88a9f0074c12750d27a26c855cb043d1">GridSnapNote</link>(<link linkend="_class_song_note_editor_1a9048b68a375aaca98125af28a848b79c">mousePosition2</link>&#32;+&#32;dragNote.<link linkend="_class_editor_note_wrapper_1a1edd1ebf3e570f194c2e1c5a5948e086">initialOffset</link>);
267 
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;note&apos;s&#32;position&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dragNote.noteTransform.position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(snappedPosition.x&#32;-&#32;0.05f,&#32;snappedPosition.y);
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a574b4799d519a82339dbdc639e760eca">UpdateStartEndTimes</link>(dragNote.<link linkend="_class_editor_note_wrapper_1ae73636bf82ca2778e70f17b38f49f4a7">noteTransform</link>.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().<link linkend="_class_editor_note_1a07a6d3b37f7a7067ecdc79fc29796860">noteEvent</link>,&#32;snappedPosition.y);
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;idk&#32;why&#32;i&#32;need&#32;to&#32;realign&#32;it&#32;with&#32;a&#32;-0.25f&#32;shift&#32;but&#32;whatever,&#32;it&#32;works</emphasis>
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
274 
275 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a611b32630fd14bc0c2785b5b6441bbf3"/><section>
    <title>GetOffsetFromTransform()</title>
<indexterm><primary>GetOffsetFromTransform</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>GetOffsetFromTransform</secondary></indexterm>
<para><computeroutput>Vector2 SongNoteEditor.GetOffsetFromTransform (Vector2 point, Transform referenceTransform)<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">308 &#32;&#32;&#32;&#32;{
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Vector2)referenceTransform.position&#32;-&#32;point;
310 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, <link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote()</link>, and <link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a88a9f0074c12750d27a26c855cb043d1"/><section>
    <title>GridSnapNote()</title>
<indexterm><primary>GridSnapNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>GridSnapNote</secondary></indexterm>
<para><computeroutput>static Vector2 SongNoteEditor.GridSnapNote (Vector2 input, float increment = <computeroutput>0::204545f</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">347 &#32;&#32;&#32;&#32;{
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;Mathf.Round(input.x&#32;/&#32;increment)&#32;*&#32;increment;
349 
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(x-0.095f,&#32;input.y);
351 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a3f3980781b2a982a7139ddcc16fac3e9"/><section>
    <title>IsTransformInSelectedNotes()</title>
<indexterm><primary>IsTransformInSelectedNotes</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>IsTransformInSelectedNotes</secondary></indexterm>
<para><computeroutput>bool SongNoteEditor.IsTransformInSelectedNotes (Transform targetTransform)<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">312 &#32;&#32;&#32;&#32;{
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;noteWrapper&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>)
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(noteWrapper.noteTransform&#32;==&#32;targetTransform)
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;Found&#32;a&#32;match</emphasis>
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
320 
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;No&#32;match&#32;found</emphasis>
322 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6"/><section>
    <title>OnLeftMouseDown()</title>
<indexterm><primary>OnLeftMouseDown</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>OnLeftMouseDown</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.OnLeftMouseDown ( )</computeroutput></para><programlisting linenumbering="unnumbered">78 &#32;&#32;&#32;&#32;{
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Input.GetMouseButtonDown(0))&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;only&#32;run&#32;if&#32;LMB&#32;down.</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mousePositionWorld&#32;=&#32;Camera.main.ScreenToWorldPoint(Input.mousePosition);&#32;<emphasis role="comment">//&#32;convert&#32;mouse&#32;position&#32;in&#32;screen&#32;space&#32;to&#32;world&#32;space.</emphasis>
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>&#32;=&#32;Physics2D.Raycast(mousePositionWorld,&#32;Vector2.zero);<emphasis role="comment">//&#32;shoot&#32;ray&#32;from&#32;mouse&#32;position.</emphasis>
82 
83 
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>)&#32;{&#32;<link linkend="_class_song_note_editor_1ac65f7f8ffc0de48fa0e8d135fdbffdbc">mousePosition1</link>&#32;=&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point;&#32;Debug.Log(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.name);&#32;}&#32;<emphasis role="comment">//&#32;set&#32;mousepos1&#32;if&#32;hit,&#32;otherwise&#32;return.</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;Debug.Log(<emphasis role="stringliteral">&quot;NullHit&quot;</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets</link>();
87 
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftShift))
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote</link>();
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftControl))
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote</link>();
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link>)
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95">AddNote</link>();
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
100 
101 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84"/><section>
    <title>OnLeftMouseHold()</title>
<indexterm><primary>OnLeftMouseHold</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>OnLeftMouseHold</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.OnLeftMouseHold ( )</computeroutput></para><programlisting linenumbering="unnumbered">103 &#32;&#32;&#32;&#32;{
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Input.GetMouseButton(0))&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;only&#32;run&#32;if&#32;LMB&#32;down.</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mousePositionWorld&#32;=&#32;Camera.main.ScreenToWorldPoint(Input.mousePosition);&#32;<emphasis role="comment">//&#32;convert&#32;mouse&#32;position&#32;in&#32;screen&#32;space&#32;to&#32;world&#32;space.</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>&#32;=&#32;Physics2D.Raycast(mousePositionWorld,&#32;Vector2.zero);<emphasis role="comment">//&#32;shoot&#32;ray&#32;from&#32;mouse&#32;position.</emphasis>
107 
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>)&#32;{&#32;<link linkend="_class_song_note_editor_1a9048b68a375aaca98125af28a848b79c">mousePosition2</link>&#32;=&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point;&#32;}&#32;<emphasis role="comment">//&#32;set&#32;mousepos1&#32;if&#32;hit,&#32;otherwise&#32;return.</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;Debug.Log(<emphasis role="stringliteral">&quot;NullHit&quot;</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
110 
111 
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftShift))
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote</link>();
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftControl))
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote</link>();
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote</link>();
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a10ef8c506080f92b5f6202359d588cbd"/><section>
    <title>OnLeftMouseUp()</title>
<indexterm><primary>OnLeftMouseUp</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>OnLeftMouseUp</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.OnLeftMouseUp ( )</computeroutput></para><programlisting linenumbering="unnumbered">155 &#32;&#32;&#32;&#32;{
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Input.GetMouseButtonUp(0))&#32;<emphasis role="keywordflow">return</emphasis>;
157 
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(GameObject&#32;note&#32;<emphasis role="keywordflow">in</emphasis>&#32;SongEditor.instance.noteObjects)
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a574b4799d519a82339dbdc639e760eca">UpdateStartEndTimes</link>(note.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().<link linkend="_class_editor_note_1a07a6d3b37f7a7067ecdc79fc29796860">noteEvent</link>,note.transform.position.y&#32;);
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869">isDragging</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
164 
165 
166 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1"/><section>
    <title>OnRightMouseDown()</title>
<indexterm><primary>OnRightMouseDown</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>OnRightMouseDown</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.OnRightMouseDown ( )</computeroutput></para><programlisting linenumbering="unnumbered">35 &#32;&#32;&#32;&#32;{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Input.GetMouseButtonDown(1))&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;only&#32;run&#32;if&#32;LMB&#32;down.</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mousePositionWorld&#32;=&#32;Camera.main.ScreenToWorldPoint(Input.mousePosition);&#32;<emphasis role="comment">//&#32;convert&#32;mouse&#32;position&#32;in&#32;screen&#32;space&#32;to&#32;world&#32;space.</emphasis>
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>&#32;=&#32;Physics2D.Raycast(mousePositionWorld,&#32;Vector2.zero);<emphasis role="comment">//&#32;shoot&#32;ray&#32;from&#32;mouse&#32;position.</emphasis>
39 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>)&#32;{&#32;<link linkend="_class_song_note_editor_1ac65f7f8ffc0de48fa0e8d135fdbffdbc">mousePosition1</link>&#32;=&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point;&#32;}&#32;<emphasis role="comment">//&#32;set&#32;mousepos1&#32;if&#32;hit,&#32;otherwise&#32;return.</emphasis>
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;Debug.Log(<emphasis role="stringliteral">&quot;NullHit&quot;</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets</link>();
43 
44 
45 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftShift))
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote</link>();
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftControl))
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote</link>();
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote</link>();&#32;}
55 
56 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb"/><section>
    <title>OnRightMouseHold()</title>
<indexterm><primary>OnRightMouseHold</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>OnRightMouseHold</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.OnRightMouseHold ( )</computeroutput></para><programlisting linenumbering="unnumbered">58 &#32;&#32;&#32;&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Input.GetMouseButton(1))&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;only&#32;run&#32;if&#32;LMB&#32;down.</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mousePositionWorld&#32;=&#32;Camera.main.ScreenToWorldPoint(Input.mousePosition);&#32;<emphasis role="comment">//&#32;convert&#32;mouse&#32;position&#32;in&#32;screen&#32;space&#32;to&#32;world&#32;space.</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>&#32;=&#32;Physics2D.Raycast(mousePositionWorld,&#32;Vector2.zero);<emphasis role="comment">//&#32;shoot&#32;ray&#32;from&#32;mouse&#32;position.</emphasis>
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>)&#32;{&#32;<link linkend="_class_song_note_editor_1ac65f7f8ffc0de48fa0e8d135fdbffdbc">mousePosition1</link>&#32;=&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point;&#32;}&#32;<emphasis role="comment">//&#32;set&#32;mousepos1&#32;if&#32;hit,&#32;otherwise&#32;return.</emphasis>
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;Debug.Log(<emphasis role="stringliteral">&quot;NullHit&quot;</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets</link>();
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftShift))
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote</link>();
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKey(KeyCode.LeftControl))
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote</link>();
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote</link>();&#32;}
76 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1af45950fdc951948890a5e15cbfebf549"/><section>
    <title>PasteSelection()</title>
<indexterm><primary>PasteSelection</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>PasteSelection</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.PasteSelection ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">285 &#32;&#32;&#32;&#32;{
286 
287 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_song_note_editor_1a5957d0008b8759d50607b11cf2d51d5f"/><section>
    <title>RescaleNotesFromBPM()</title>
<indexterm><primary>RescaleNotesFromBPM</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>RescaleNotesFromBPM</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.RescaleNotesFromBPM ( )</computeroutput></para><programlisting linenumbering="unnumbered">324 &#32;&#32;&#32;&#32;{
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;modifiedScale&#32;=&#32;<link linkend="_class_game_manager">GameManager</link>.<link linkend="_class_game_manager_1a7666e8468dac197b9eb32dd32128524f">instance</link>.modifiedNoteScale;
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(GameObject&#32;g&#32;<emphasis role="keywordflow">in</emphasis>&#32;SongEditor.instance.noteObjects)
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sr&#32;=&#32;g.GetComponent&lt;SpriteRenderer&gt;();
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newSize&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(sr.size.x,&#32;Mathf.Clamp(((
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().<link linkend="_class_editor_note_1a07a6d3b37f7a7067ecdc79fc29796860">noteEvent</link>.<link linkend="_class_note_event_info_1a76b4dce9953ce2bce508fa5a35ef7f7c">endTime</link>&#32;-
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().<link linkend="_class_editor_note_1a07a6d3b37f7a7067ecdc79fc29796860">noteEvent</link>.<link linkend="_class_note_event_info_1aaeaec089312cf881c719b2b56680fbff">startTime</link>)),&#32;0.5f,&#32;Mathf.Infinity));
332 
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sr.size&#32;=&#32;newSize;
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sr.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().SetShadowSize(newSize.y);
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
336 
337 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95">AddNote()</link>, and <link linkend="_class_song_note_editor_1ab97d39b001c5ceebc116d7d02dccdf87">ScaleNote()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1ab97d39b001c5ceebc116d7d02dccdf87"/><section>
    <title>ScaleNote()</title>
<indexterm><primary>ScaleNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>ScaleNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.ScaleNote ( )</computeroutput></para><programlisting linenumbering="unnumbered">223 &#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Count&#32;&gt;&#32;0&#32;&amp;&amp;&#32;Input.GetKey(KeyCode.LeftShift))
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;scroll&#32;=&#32;Input.mouseScrollDelta.y;
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scroll&#32;!=&#32;0)
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_note_event_info">NoteEventInfo</link>&#32;noteEvent&#32;<emphasis role="keywordflow">in</emphasis>&#32;SongEditor.FindNoteEventInfo(<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>))
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
231 
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(noteEvent.<link linkend="_class_note_event_info_1a76b4dce9953ce2bce508fa5a35ef7f7c">endTime</link>&#32;&lt;=&#32;noteEvent.<link linkend="_class_note_event_info_1aaeaec089312cf881c719b2b56680fbff">startTime</link>&#32;||&#32;noteEvent.<link linkend="_class_note_event_info_1a76b4dce9953ce2bce508fa5a35ef7f7c">endTime</link>&#32;+&#32;Mathf.Sign(scroll)&#32;*&#32;0.1f&#32;&lt;=&#32;noteEvent.<link linkend="_class_note_event_info_1aaeaec089312cf881c719b2b56680fbff">startTime</link>)
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noteEvent.endTime&#32;=&#32;noteEvent.startTime&#32;+&#32;0.05f;
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
238 
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noteEvent.endTime&#32;+=&#32;Mathf.Sign(scroll)&#32;*&#32;0.05f;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a5957d0008b8759d50607b11cf2d51d5f">RescaleNotesFromBPM</link>();
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
245 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00">Update()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7"/><section>
    <title>SelectNote()</title>
<indexterm><primary>SelectNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>SelectNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.SelectNote ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">187 &#32;&#32;&#32;&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.CompareTag(<emphasis role="stringliteral">&quot;EditorNote&quot;</emphasis>))
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Any(note&#32;=&gt;&#32;note.noteTransform&#32;==&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform))
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;temp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform,&#32;<link linkend="_class_song_note_editor_1a611b32630fd14bc0c2785b5b6441bbf3">GetOffsetFromTransform</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point,&#32;<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.transform));
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.Add(temp);
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp.noteTransform.GetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;().SetHighlightColour(Color.red);
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
197 
198 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold()</link>, <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, and <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72"/><section>
    <title>SubtractNote()</title>
<indexterm><primary>SubtractNote</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>SubtractNote</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.SubtractNote ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">178 &#32;&#32;&#32;&#32;{
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.collider.TryGetComponent&lt;<link linkend="_class_editor_note">EditorNote</link>&gt;(out&#32;var&#32;noteEvent))
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1aa17a3d897f2403136eb7afc95d338af3">DeselectAllNotes</link>();
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>.RemoveWhere(note&#32;=&gt;&#32;note.noteTransform&#32;==&#32;noteEvent.transform);
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SongEditor.instance.RemoveNoteEvent(noteEvent,&#32;<emphasis role="keyword">true</emphasis>);
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
185 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, and <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1ae2b6f20e016e18d7208d3e8ba3eecf00"/><section>
    <title>Update()</title>
<indexterm><primary>Update</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>Update</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.Update ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">23 &#32;&#32;&#32;&#32;{
24 
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown</link>();
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold</link>();
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a10ef8c506080f92b5f6202359d588cbd">OnLeftMouseUp</link>();
28 
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown</link>();
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold</link>();
31 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_song_note_editor_1ab97d39b001c5ceebc116d7d02dccdf87">ScaleNote</link>();
33 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9"/><section>
    <title>UpdateSelectedNoteOffsets()</title>
<indexterm><primary>UpdateSelectedNoteOffsets</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>UpdateSelectedNoteOffsets</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.UpdateSelectedNoteOffsets ( )<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">340 &#32;&#32;&#32;&#32;{
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&#32;dragNote&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327">selectedNotes</link>)
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dragNote.initialOffset&#32;=&#32;<link linkend="_class_song_note_editor_1a611b32630fd14bc0c2785b5b6441bbf3">GetOffsetFromTransform</link>(<link linkend="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3">hit</link>.point,&#32;dragNote.<link linkend="_class_editor_note_wrapper_1ae73636bf82ca2778e70f17b38f49f4a7">noteTransform</link>);&#32;<emphasis role="comment">//&#32;assign&#32;all&#32;offset&#32;values&#32;for&#32;clicking&#32;and&#32;dragging.</emphasis>
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
345 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, and <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a574b4799d519a82339dbdc639e760eca"/><section>
    <title>UpdateStartEndTimes()</title>
<indexterm><primary>UpdateStartEndTimes</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>UpdateStartEndTimes</secondary></indexterm>
<para><computeroutput>void SongNoteEditor.UpdateStartEndTimes (<link linkend="_class_note_event_info">NoteEventInfo</link> noteEvent, float snappedYPos)<computeroutput>[private]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">290 &#32;&#32;&#32;&#32;{
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;noteEvent.<link linkend="_class_note_event_info_1abfb6def635487efee09669acfb69e7e2">GetDuration</link>();
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;newStartTime&#32;=&#32;snappedYPos&#32;-&#32;(duration&#32;/&#32;2);&#32;<emphasis role="comment">//&#32;ConvertYPositionToSongTime(snappedPosition);</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noteEvent.<link linkend="_class_note_event_info_1a09db3f7bf93597788cd4e3e69c302651">SetStartEndTime</link>(newStartTime,&#32;newStartTime&#32;+&#32;duration);
294 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, and <link linkend="_class_song_note_editor_1a10ef8c506080f92b5f6202359d588cbd">OnLeftMouseUp()</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_song_note_editor_1a70c2afca7ead12cc95a000d3180d80b3"/><section>
    <title>groupSelectLayerMask</title>
<indexterm><primary>groupSelectLayerMask</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>groupSelectLayerMask</secondary></indexterm>
<para><computeroutput>LayerMask SongNoteEditor.groupSelectLayerMask<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_song_note_editor_1ac85b1364dbb19cd3aa4449a7488866f3"/><section>
    <title>hit</title>
<indexterm><primary>hit</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>hit</secondary></indexterm>
<para><computeroutput>RaycastHit2D SongNoteEditor.hit<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_song_note_editor_1ae621ba2e9e94f07a33e281b65c751b95">AddNote()</link>, <link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote()</link>, <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold()</link>, <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>, <link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote()</link>, <link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote()</link>, and <link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1acfdfea7dd30b623aceea259f042db869"/><section>
    <title>isDragging</title>
<indexterm><primary>isDragging</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>isDragging</secondary></indexterm>
<para><computeroutput>bool SongNoteEditor.isDragging<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, and <link linkend="_class_song_note_editor_1a10ef8c506080f92b5f6202359d588cbd">OnLeftMouseUp()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a16d2c1b60739973f10ef20d385435e21"/><section>
    <title>isGroupSelecting</title>
<indexterm><primary>isGroupSelecting</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>isGroupSelecting</secondary></indexterm>
<para><computeroutput>bool SongNoteEditor.isGroupSelecting<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_song_note_editor_1ad0191c5dacb3e8a3a6446c196b29428f"/><section>
    <title>isScaling</title>
<indexterm><primary>isScaling</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>isScaling</secondary></indexterm>
<para><computeroutput>bool SongNoteEditor.isScaling<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_song_note_editor_1ac65f7f8ffc0de48fa0e8d135fdbffdbc"/><section>
    <title>mousePosition1</title>
<indexterm><primary>mousePosition1</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>mousePosition1</secondary></indexterm>
<para><computeroutput>Vector2 SongNoteEditor.mousePosition1<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_song_note_editor_1a4a48dbbfb63423a840655479dbaab5a6">OnLeftMouseDown()</link>, <link linkend="_class_song_note_editor_1a28f34af036d853290091762ec39e12c1">OnRightMouseDown()</link>, and <link linkend="_class_song_note_editor_1ae435a1fb6751c1f5a7763694414a2cbb">OnRightMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a9048b68a375aaca98125af28a848b79c"/><section>
    <title>mousePosition2</title>
<indexterm><primary>mousePosition2</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>mousePosition2</secondary></indexterm>
<para><computeroutput>Vector2 SongNoteEditor.mousePosition2<computeroutput>[private]</computeroutput></computeroutput></para><para>
Referenced by <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, and <link linkend="_class_song_note_editor_1a9ceb7330da48fdb08809845bfe0aba84">OnLeftMouseHold()</link>.</para>
</section>
<anchor xml:id="_class_song_note_editor_1a148110f33b452b15f1118755429cd6b2"/><section>
    <title>selectCount</title>
<indexterm><primary>selectCount</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>selectCount</secondary></indexterm>
<para><computeroutput>float SongNoteEditor.selectCount</computeroutput></para></section>
<anchor xml:id="_class_song_note_editor_1a1cae6890095d6068b4948ac28fc66327"/><section>
    <title>selectedNotes</title>
<indexterm><primary>selectedNotes</primary><secondary>SongNoteEditor</secondary></indexterm>
<indexterm><primary>SongNoteEditor</primary><secondary>selectedNotes</secondary></indexterm>
<para><computeroutput>HashSet&lt;<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&gt; SongNoteEditor.selectedNotes = new HashSet&lt;<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link>&gt;()</computeroutput></para><para>
Referenced by <link linkend="_class_song_note_editor_1aa17a3d897f2403136eb7afc95d338af3">DeselectAllNotes()</link>, <link linkend="_class_song_note_editor_1ad221dc0913d18cbb1c1cc11a1ffa9d4d">DeselectNote()</link>, <link linkend="_class_song_note_editor_1a8665364022802da939ffa6c4d53adc6c">DragNote()</link>, <link linkend="_class_song_note_editor_1a3f3980781b2a982a7139ddcc16fac3e9">IsTransformInSelectedNotes()</link>, <link linkend="_class_song_note_editor_1ab97d39b001c5ceebc116d7d02dccdf87">ScaleNote()</link>, <link linkend="_class_song_note_editor_1a0c0228374bf3c074b3c3664559302dd7">SelectNote()</link>, <link linkend="_class_song_note_editor_1a9d8493d87a00a15d4b6b3745e6418a72">SubtractNote()</link>, and <link linkend="_class_song_note_editor_1a3ada65ab49d94c986903bc143c2b54d9">UpdateSelectedNoteOffsets()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Assets/Scripts/<link linkend="__song_note_editor_8cs">SongNoteEditor.cs</link></section>
</section>
