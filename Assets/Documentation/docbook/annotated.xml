<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_beat_number_generator">BeatNumberGenerator</link>
<para>Generates beat numbers as TextMeshProUGUI objects </para>
<link linkend="_class_camera_scroll_manager">CameraScrollManager</link><link linkend="_class_camera_shake">CameraShake</link>
<para>Controls camera shake effect using Cinemachine </para>
<link linkend="_class_combo">Combo</link><link linkend="_class_editor_note">EditorNote</link>
<para>Represents a note in the editor with associated event information </para>
<link linkend="_class_editor_note_wrapper">EditorNoteWrapper</link><link linkend="_class_exit">Exit</link><link linkend="_class_extra_song_info_menu">ExtraSongInfoMenu</link><link linkend="_class_falling_note">FallingNote</link>
<para>Represents a falling note object in the game </para>
<link linkend="_struct_file_group">FileGroup</link>
<para>Represents a group of files related to a specific song </para>
<link linkend="_struct_file_group_error">FileGroupError</link>
<para>Struct containing information on which files are or aren&apos;t located when assembling a file group for a song </para>
<link linkend="_class_game_manager">GameManager</link><link linkend="_class_game_settings_menu">GameSettingsMenu</link><link linkend="_class_game_u_i">GameUI</link><link linkend="_class_kiboard_debug">KiboardDebug</link><link linkend="_class_main_menu_load">MainMenuLoad</link><link linkend="_class_midi_data_handler">MidiDataHandler</link><link linkend="_class_midi_input">MidiInput</link><link linkend="_class_midi_read_file">MidiReadFile</link><link linkend="_class_m_p3_handler">MP3Handler</link>
<para>Handles reading and playback of .MP3 Files </para>
<link linkend="_class_note_event_data_wrapper">NoteEventDataWrapper</link>
<para>Wrapper class for storing BPM and <link linkend="_class_note_event_info">NoteEventInfo</link> data </para>
<link linkend="_class_note_event_info">NoteEventInfo</link>
<para>Class containing all info needed to play a note </para>
<link linkend="_class_note_shadow">NoteShadow</link><link linkend="_class_replay">Replay</link><link linkend="_class_song_note_editor">SongNoteEditor</link><link linkend="_class_song_score">SongScore</link><link linkend="_class_spawn_piano">SpawnPiano</link></section>
