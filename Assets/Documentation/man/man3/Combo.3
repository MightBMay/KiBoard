.TH "Combo" 3 "Version 1.0.0" "KiBoard GDD & Technical Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Combo
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBClearCombo\fP ()"
.br
.RI "Resets combo variables to default values\&. "
.ti -1c
.RI "void \fBChangeMultiplier\fP (string score)"
.br
.RI "Updates the multiplier based on the timing score of the note pressed\&. "
.ti -1c
.RI "float \fBGetIncrease\fP (string score)"
.br
.RI "Get the Multiplier increase based on note timing score\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBmultiplier\fP = 1"
.br
.RI "Current score multiplier\&. "
.ti -1c
.RI "int \fBcount\fP"
.br
.RI "Current number of consecutive notes without dropping combo\&. "
.ti -1c
.RI "float \fBdropCounter\fP"
.br
.RI "current amount of notes dropped\&. multiplier is reset to 1 when this reaches -10\&. "
.ti -1c
.RI "int \fBhighestCount\fP = 0"
.br
.RI "tracks the highest count reached this song\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "const float \fBmaxMultiplier\fP = 3"
.br
.RI "Maximum multiplier that can be achieved\&. "
.ti -1c
.RI "const int \fBcomboKillThreshold\fP = \-10"
.br
.RI "how many missed notes before multiplier is set to 1\&. "
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "void Combo\&.ChangeMultiplier (string score)"

.PP
Updates the multiplier based on the timing score of the note pressed\&. 
.PP
\fBParameters\fP
.RS 4
\fIscore\fP String containing 'Perfect, Good, Okay' used to determine how much to add to the multiplier\&.
.RE
.PP

.nf
49     {
50         float increase = GetIncrease(score);
51         multiplier += increase;
52         if (Mathf\&.Sign(increase) >= 0)
53         {
54             count++;
55             if (highestCount < count) { highestCount = count; }
56             dropCounter += 0\&.1f;
57         }
58         else
59         {
60             if (multiplier > 1) { dropCounter \-= 1; }
61             else { dropCounter = 0; }
62         }
63 
64         if (dropCounter <= comboKillThreshold)
65         {
66             multiplier = 0;
67             count = 0;
68             dropCounter = 0;
69         }
70 
71         multiplier = Mathf\&.Clamp(multiplier, 1, maxMultiplier);
72         dropCounter = Mathf\&.Clamp(dropCounter, comboKillThreshold, 0);
73         try { GameUI\&.instance\&.SetComboBarValue(multiplier); } catch { Debug\&.Log("Error Setting ComboBarValue"); }
74 
75     }
.PP
.fi

.SS "void Combo\&.ClearCombo ()"

.PP
Resets combo variables to default values\&. 
.nf
37     {
38         multiplier = 1;
39         count = 0;
40         dropCounter = 0;
41         highestCount = 0;
42 
43     }
.PP
.fi

.SS "float Combo\&.GetIncrease (string score)"

.PP
Get the Multiplier increase based on note timing score\&. 
.PP
\fBParameters\fP
.RS 4
\fIscore\fP string score for note score timing\&.
.RE
.PP
\fBReturns\fP
.RS 4
float Change in multiplier based off of note score timing
.RE
.PP

.nf
83     {
84         switch (score)
85         {
86             case "Perfect": return 0\&.05f;
87             case "Good": return 0\&.025f;
88             case "Okay": return 0\&.01f;
89             default: return \-0\&.05f;
90         }
91     }
.PP
.fi

.PP
Referenced by \fBChangeMultiplier()\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const int Combo\&.comboKillThreshold = \-10\fR [static]\fP, \fR [private]\fP"

.PP
how many missed notes before multiplier is set to 1\&. 
.PP
Referenced by \fBChangeMultiplier()\fP\&.
.SS "int Combo\&.count"

.PP
Current number of consecutive notes without dropping combo\&. 
.PP
Referenced by \fBChangeMultiplier()\fP, and \fBClearCombo()\fP\&.
.SS "float Combo\&.dropCounter"

.PP
current amount of notes dropped\&. multiplier is reset to 1 when this reaches -10\&. 
.PP
Referenced by \fBChangeMultiplier()\fP, and \fBClearCombo()\fP\&.
.SS "int Combo\&.highestCount = 0"

.PP
tracks the highest count reached this song\&. 
.PP
Referenced by \fBChangeMultiplier()\fP, and \fBClearCombo()\fP\&.
.SS "const float Combo\&.maxMultiplier = 3\fR [static]\fP, \fR [private]\fP"

.PP
Maximum multiplier that can be achieved\&. 
.PP
Referenced by \fBChangeMultiplier()\fP\&.
.SS "float Combo\&.multiplier = 1"

.PP
Current score multiplier\&. 
.PP
Referenced by \fBChangeMultiplier()\fP, and \fBClearCombo()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for KiBoard GDD & Technical Documentation from the source code\&.
